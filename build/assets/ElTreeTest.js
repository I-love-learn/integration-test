import{_ as h,i as v,y as u,v as b,o as x,c as g,b as E,e as l,w as n,W as o,F as C,a as e,N as r,f as s}from"./index.js";import{E as T}from"./el-card.js";import{E as B}from"./el-button.js";import{E as N}from"./el-tree.js";import"./el-checkbox.js";import"https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/react/18.0.0-alpha-031abd24b-20210907/umd/react.development.js";import"./index4.js";import"./objects.js";import"./aria.js";import"./isEqual.js";import"./hasIn.js";import"./_overRest.js";import"./identity.js";const w={style:{"margin-left":"10px"}},V={style:{"margin-left":"10px"}},D={style:{"margin-left":"10px"}},K=e("p",null," 虽然highlight-current node-key current-node-key 可以决定树初始化时选中哪个节点 但是如果该节点默认没有default-expand-all被展开 的话 tree是不会自动展开的 ",-1),M=e("p",null," current-node-key 控制的是默认选中节点 但是这个属性不是双向绑定的 因此 改变current-node-key会改变默认选中 但手动切换选中不会更新current-node-key 这就会出现上面的问题 如果我一开始给current-node-key赋值了通过按钮事件 后续自己手动切换后 再点击按钮 current-node-key还是没有改变 并且 tree不会切换选中id为7的节点 ",-1),j=e("p",null," 如果el-tree绑定的数据被重新赋值改变了，那么current-node-key会重新选中一开始初始化时 赋值的那个节点 也就是beforeMount时current-node-key的值 而beforeMount后重新赋值的current-node-key值改变不会影响绑定的数据重新赋值改变的current-node-key 但是如果数据被替换后又修改了current-node-key的话 对应的node 会被选中 初步猜测是子组件mounted时 存了旧的current-node-key作为初始值。 ",-1),F=e("p",null,"这一点在el很多组件中 初始值都是如此设计的 比如form",-1),$=e("p",null," el-form data被重新赋值后 默认展开取得是最新得默认展开得值 而不会像默认选中一样取初始值。 并且如果 原先数据 展开了多个节点 替换数据后 只会展开 默认得节点 ",-1),A=e("p",null,"default-expand-all 大于default-expanded-keys",-1),S=e("p",null,"默认勾选数据和默认展开一致 切换数据也以当前数据为准",-1),U=e("p",null," node.id是 el自己的id 自增生成的每次数据重新赋值 node.id都会自增 而node.data.id 才是自己的 ",-1),W=e("p",null,"以上所有属性均不支持v-model",-1),q={__name:"ElTreeTest",setup(z){const c=v({data:[{label:"白鹿原",value:"1",id:100,children:[{label:"白嘉轩",value:"1-1",id:2,children:[{label:"白孝文",value:"1-1-1",id:4},{label:"白孝武",value:"1-1-2",id:5}]},{label:"鹿子霖",value:"1-2",id:3,children:[{label:"鹿兆鹏",value:"1-2-1",id:6},{label:"鹿兆海",value:"1-2-2",id:7}]}]}]}),i=u(5);function f(){c.data=[{label:"三国演义",value:"1",id:1,children:[{label:"刘备",value:"1-1",id:2,children:[{label:"关羽",value:"1-1-1",id:4},{label:"张飞",value:"1-1-2",id:5}]},{label:"曹操",value:"1-2",id:3,children:[{label:"张郃",value:"1-2-1",id:6},{label:"典韦",value:"1-2-2",id:7}]}]}]}b(()=>{i.value=6});const p=u([3]);function m(){p.value=[2]}const _=u();return(G,a)=>{const k=N,d=B,y=T;return x(),g(C,null,[E("     default-expand-all "),l(k,{data:o(c).data,"highlight-current":"","node-key":"id","current-node-key":o(i),"default-expanded-keys":o(p),"show-checkbox":"","default-checked-keys":o(_)},{default:n(({node:t,data:H})=>[e("span",null,r(t.label),1),e("span",w,r(t.value),1),e("span",V,r(t.id),1),e("span",D,r(t.data.id),1)]),_:1},8,["data","current-node-key","default-expanded-keys","default-checked-keys"]),l(y,{header:"操作栏"},{default:n(()=>[l(d,{onClick:a[0]||(a[0]=t=>i.value=7)},{default:n(()=>[s("换一个选中id")]),_:1}),l(d,{onClick:f},{default:n(()=>[s("给树换一个数据")]),_:1}),l(d,{onClick:m},{default:n(()=>[s("换个默认展开")]),_:1}),l(d,{onClick:a[1]||(a[1]=t=>_.value=[6,7])},{default:n(()=>[s("换个默认勾选")]),_:1})]),_:1}),K,M,j,F,$,A,S,U,W],64)}}},ne=h(q,[["__file","C:/Users/Administrator/Desktop/study-jk/study-jk/test/integration-test/src/views/el/ElTreeTest.vue"]]);export{ne as default};
